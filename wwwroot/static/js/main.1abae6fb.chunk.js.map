{"version":3,"sources":["components/NavMenu.jsx","components/Layout.jsx","services/JsonHttpService.js","models/CalcDto.js","services/CalculatorService.js","components/CalculatorTable.jsx","components/Calculator.jsx","components/About.jsx","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","color","className","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","icon","faHome","size","faCalculator","faSpaceShuttle","Component","displayName","name","Layout","children","jsonGET$","url","a","fetch","method","headers","response","json","jsonPOST$","body","JSON","stringify","CalcDto","id","argX","argY","operation","result","undefined","error","current","Date","BASE_URL_0","CalcClass","EvHistory","SubjectHistory","asObservable","EvCalcResult","SubjectResultCalc","EvSelect","SubjectSelect","toCalculate","x","y","op","dto","_calcByServer$","then","dtoRes","sendCalcResult","sendHistory","console","dir","catch","err","log","ID","_data","SelectedDto","req","calcByMok","CMap","set","next","getOperations$","ret","Operations","getHistory","values","reverse","length","loadHistory$","clear","map","Math","max","removeHistoryRow","has","delete","jsonDELETE$","b","e","getById","get","getSelectedDto","getSelectedID","setSelected","Subject","status","Map","CalculatorService","CalculatorTable","componentWillUnmount","subscriptions","sub","unsubscribe","componentDidMount","sub1","subscribe","n","onEvHistory","sub2","onEvSelect","Svc","_history","history","selectedId","handleSelectRow","handleRemoveRow","render","rowBkColor","idx","aria-labelledby","key","style","background","Button","variant","type","faTimesCircle","faArrowAltCircleRight","Calculator","onEvCalcResult","handleCalc","preventDefault","createSelectItems","items","opers","operations","i","push","value","_errorBanner","Form","Label","inline","onSubmit","Group","controlId","mb","OverlayTrigger","delay","hide","show","overlay","Tooltip","placement","Control","onChange","target","as","faEquals","readOnly","About","App","exact","path","component","window","location","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","basename","URL","process","origin","addEventListener","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1abae6fb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\n//import { faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { faCalculator } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSpaceShuttle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar() {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <Navbar  color=\"red\" className=\"navbar-expand-sm \r\n            navbar-toggleable-sm ng-blue border-bottom box-shadow mb-3\" >\r\n          <Container>\r\n            <NavbarBrand tag={Link}  to=\"/\">aed_isracart_ahuva</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link}  className=\"text-dark\" to=\"/\">\r\n                    <FontAwesomeIcon color=\"#0366d6\" icon={faHome} size=\"lg\" /> Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link}   className=\"text-dark\" to=\"/calc\">\r\n                    <FontAwesomeIcon color=\"#0366d6\" icon={faCalculator} size=\"lg\" /> \r\n                    &nbsp;Calculator\r\n                  </NavLink>\r\n                </NavItem>\r\n               <NavItem>\r\n                  <NavLink tag={Link}  className=\"text-dark\" to=\"/swagger\">\r\n                    <FontAwesomeIcon color=\"#0366d6\" icon={faSpaceShuttle} size=\"lg\" />\r\n                     &nbsp;Swagger\r\n                  </NavLink>\r\n                </NavItem>\r\n            \r\n          \r\n\r\n                {/* <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/counter\">Counter</NavLink>\r\n                </NavItem> */}\r\n                {/* <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\">Fetch data</NavLink>\r\n                </NavItem> */}\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\n\r\nexport async function jsonGET$(url) {\r\n    try {\r\n        const response = await fetch(url,\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }\r\n        );\r\n        return response.json();\r\n        \r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n  \r\n}\r\nexport async function jsonPOST$(url, body) {\r\n    try {\r\n        const response = await fetch(url,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n        );\r\n        return response.json();\r\n        \r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n  \r\n}\r\nexport async function jsonDELETE$(url) {\r\n    try {\r\n        const response = await fetch(url,\r\n            {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }\r\n        );\r\n        return response.json();\r\n        \r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n  \r\n}","export class CalcDto {\r\n    constructor() {\r\n        this.id = -1;\r\n        this.argX = 0;\r\n        this.argY = 0;\r\n        this.operation = '+';\r\n        this.result = undefined;\r\n        this.error = '';\r\n        this.current = new Date();\r\n    }\r\n}\r\n\r\nexport class CalcRequest {\r\n\r\n    constructor() {\r\n        \r\n        this.id =  -1;\r\n        this.argX =  0;\r\n        this.argY =   0;\r\n        this.operation =  '';\r\n   }\r\n}\r\n  ","\r\nimport { jsonPOST$, jsonDELETE$, jsonGET$ } from './JsonHttpService'\r\nimport { CalcDto} from '../models/CalcDto';\r\nimport { Subject } from 'rxjs';\r\n\r\n///TO USER SERVER - MOK have been set to  0\r\nexport const MOK = 0;\r\nconst BASE_URL_0 = 'http://localhost:5000/api/calc';\r\n\r\n///=========================================================\r\n/// Service singletone to store operation and history of them\r\n///=========================================================\r\nclass CalcClass {\r\n    static ID = 0;\r\n    static CMap =  new Map ();//<id,CalcDto>\r\n    EvHistory = () => this.SubjectHistory.asObservable();\r\n    EvCalcResult = () => this.SubjectResultCalc.asObservable();\r\n    EvSelect = () => this.SubjectSelect.asObservable();\r\n \r\n    \r\n    constructor() {\r\n        this.Operations = ['+', '-', '*', '/'];\r\n        this.SelectedDto = undefined;\r\n        this.SubjectHistory = new Subject();\r\n        this.SubjectResultCalc = new Subject();\r\n        this.SubjectSelect = new Subject();\r\n \r\n    }\r\n\r\n   \r\n   //=== CALCULATION SERVICE =====\r\n  \r\n    //CALCULATES  (x, y, op) returns status , reult and ID \r\n    // stores item in internal cache and  the server\r\n    // returns {dto:CalcDto,error}   \r\n\r\n    toCalculate = (x, y, op , id) =>{\r\n        let dto = new CalcDto();\r\n        id = id || -1;\r\n        dto.id = +id;\r\n        dto.argX = x;\r\n        dto.argY = y;\r\n        dto.argY = y;\r\n        dto.operation = op;\r\n       // onEvCalculateInternal(dto);\r\n\r\n        //this._subjectCalculate.next(dto);\r\n        this._calcByServer$(dto).then(\r\n            dtoRes => {\r\n                this.sendCalcResult(dto);\r\n                if (!dtoRes.error) {\r\n                    this.sendHistory();\r\n                }\r\n                console.dir(dtoRes);\r\n               // this.SubjectResultCalc(dtoRes);\r\n            }\r\n        ).catch (\r\n            err => {\r\n                console.log(err);\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n     _calcByServer$ = async (dto) => { // {res,err,id}\r\n        dto.result = 'N/A';\r\n        dto.error = undefined;\r\n\r\n        if (dto.operation === '/' && !dto.argY) {\r\n            dto.error = 'Divide by Zero';\r\n            return dto;\r\n        }\r\n        \r\n       // debugger;\r\n        dto.id = (+dto.id > 0) ? +dto.id : ++CalcClass.ID;\r\n        let _data = {}\r\n        this.SelectedDto = undefined;\r\n     //==================== WEB API PART ===============\r\n\r\n        try {\r\n           \r\n            if (!MOK) {\r\n                const req = {\r\n                    id: dto.id,\r\n                    argX: dto.argX,\r\n                    argY: dto.argY,\r\n                    operation: dto.operation\r\n                };\r\n                \r\n                _data = await jsonPOST$(BASE_URL_0,req);\r\n              \r\n            } else {\r\n                //This helpe works only in debud MOK mode\r\n               _data =  await this.calcByMok(+dto.argX, +dto.argY,  dto.operation);\r\n           \r\n            }\r\n            \r\n            dto.error = _data?.error || '';\r\n    \r\n            if (!dto.error) {\r\n                dto.result = _data.result;\r\n                CalcClass.CMap.set(dto.id, dto);\r\n                this.SelectedDto = undefined;\r\n               \r\n            } else {\r\n                dto.result = 'N/A';\r\n            }\r\n\r\n        } catch (error) {\r\n            dto.result = 'ERROR';\r\n            dto.error = 'Server Error:' + error;\r\n        }\r\n\r\n       \r\n        return dto;\r\n    }\r\n    \r\n    sendCalcResult = (dto) => {\r\n       // const _history = this.getHistory();\r\n        console.log('=>sendCalcResult(' + dto.result + ')');\r\n        this.SubjectResultCalc.next(dto);\r\n    }\r\n\r\n    // Helper, works only in MOK (serverless) mode\r\n    async calcByMok(x, y, op ) {\r\n        let ret = 0;\r\n        switch (op) {\r\n            case '+': ret = x + y; break;\r\n            case '-': ret = x - y; break;\r\n            case '*': ret = x * y; break;\r\n            case '/': ret = x / y; break;\r\n            default:\r\n                return {status:4,result:'N/A'}\r\n        }\r\n        return {status:200,result:ret};\r\n    }\r\n\r\n    // Retrieves operation from server\r\n    \r\n    // Returns IEnumerable<string[]>\r\n    getOperations$ = async () => { //  CalcDto[]\r\n        if (!MOK) {\r\n            const ret = await jsonGET$(BASE_URL_0 + '/operations');\r\n            this.Operations = [...ret];\r\n        } \r\n            return this.Operations;\r\n    }\r\n\r\n //=== HISTORY SERVICE =====\r\n    \r\n \r\n      //Used to fill the history in the page\r\n    // Returns CalcDto[]\r\n    getHistory = () => { //  CalcDto[]\r\n        //TBD retrieve from server\r\n        const ret = [...CalcClass.CMap.values()].reverse();\r\n        console.log('=>getHistory(' + ret.length + ')');\r\n        return ret;\r\n    }\r\n\r\n    //Downloads old history from the server\r\n    loadHistory$ = async () => { //  CalcDto[]\r\n        CalcClass.CMap.clear();\r\n        if (!MOK) {\r\n            try {\r\n                let _data = await jsonGET$(BASE_URL_0 + '/history') ;\r\n                    CalcClass.CMap.clear();\r\n                    _data = [];\r\n                    _data.map((dto) => {\r\n                        CalcClass.CMap.set(dto.id, dto);\r\n                        return CalcClass.ID = Math.max(dto.id, CalcClass.ID);\r\n                    });\r\n\r\n               \r\n            } catch (error) {\r\n                console.log('Error to load history from server')\r\n            }\r\n        \r\n        }\r\n        const ret = [...CalcClass.CMap.values()].reverse();\r\n        console.log('=>loadHistory(' + ret.length + ')');\r\n        return ret;\r\n    }\r\n\r\n    sendHistory = () => {\r\n       // const _history = this.getHistory();\r\n        const size = CalcClass.CMap.size;\r\n        console.log('=>sendHistory(' + size + ')');\r\n        this.SubjectHistory.next(size);\r\n    }\r\n\r\n    //DELETES requested ID item from history\r\n    //both from internal cache and  the server\r\n    // Returns true if succeded\r\n\r\n    removeHistoryRow = (id) => {\r\n        if (CalcClass.CMap.has(+id)) {\r\n            CalcClass.CMap.delete(+id);\r\n            this.sendHistory();\r\n            if (!MOK) {\r\n                jsonDELETE$(BASE_URL_0 + '/' + id)\r\n                    .then(b => {\r\n                        if (b) console.log('=>Removed from server id=' + id);\r\n                    }).catch(e => {\r\n                         console.log('=>Error on server removed  id=' + id + ' error :' + e);\r\n                    });\r\n            }\r\n        \r\n        }\r\n    }\r\n\r\n    //==============SELECT========================= \r\n\r\n    getById = (id) => { //  id or 0\r\n        return  CalcClass.CMap.get(id);;\r\n    }\r\n\r\n    getSelectedDto = (id) => { //  id or 0\r\n        return this.SelectedDto;\r\n    }\r\n\r\n    getSelectedID = (id) => { //  id or 0\r\n        return this.SelectedDto?.id || -1;\r\n    }\r\n\r\n    setSelected = (id) => { //  id or 0\r\n        this.SelectedDto = CalcClass.CMap.get(id);\r\n        this.SubjectSelect.next(this.getSelectedID());\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport const CalculatorService = new CalcClass();\r\n\r\n// Response body\r\n// Download\r\n// {\r\n//   \"id\": 4,\r\n//   \"argX\": 1,\r\n//   \"argY\": 2,\r\n//   \"operation\": \"+\",\r\n//   \"result\": 3,\r\n//   \"error\": \"\",\r\n//   \"current\": \"2021-06-30T20:58:19.3168258+03:00\"\r\n// }\r\n\r\n  // onEvCalculateInternal = (dto) {\r\n\r\n    //     calcByServer$(dto).then(\r\n    //         dtoRes => {\r\n    //             this.subjectResultCalc(dtoRes);\r\n    //         }\r\n    //     ).catch (\r\n    //         err => {\r\n    //             dto.result = 'N/A';\r\n    //             dto.error = err;\r\n    //             this.subjectResultCalc(dto);\r\n    //         }\r\n    //     )\r\n       \r\n    // }","import React, { Component } from 'react';\r\n//import { render } from \"react-dom\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle  } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faArrowAltCircleRight } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { CalculatorService as Svc} from '../services/CalculatorService';\r\nimport './CalculatorTable.css';\r\n\r\n//const MapHistory = new Map();\r\nexport class CalculatorTable extends Component {\r\n  static displayName = CalculatorTable.name;\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n      history: [], // CalcDto[],\r\n      selectedId: -1,\r\n    };\r\n    this.EvHistory = Svc.EvHistory();\r\n    this.EvSelect = Svc.EvSelect();\r\n\r\n    this.subscriptions = [];\r\n    console.log('CalculatorTable::constructor');\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n     //To unsubscribe Events from server\r\n    this.subscriptions.map(sub => sub.unsubscribe());\r\n  }\r\n \r\n  componentDidMount = async () => {\r\n    //To subcribe Events from server\r\n   \r\n    const sub1 = this.EvHistory.subscribe((n) => this.onEvHistory(n));\r\n    const sub2 = this.EvSelect.subscribe((id) => this.onEvSelect(id));\r\n\r\n    this.subscriptions = [sub1, sub2];\r\n      \r\n    const _history = [...await Svc.loadHistory$()];\r\n    this.setState({\r\n      history: [..._history]\r\n    });\r\n  }\r\n\r\n  \r\n  onEvSelect = (id) => {\r\n    if (this.setState.selectedId !== +id) {\r\n        this.setState({ selectedId: +id });\r\n    }\r\n  }\r\n\r\n  onEvHistory = (n) => {\r\n      this.setState({ history: [...Svc.getHistory()]  });\r\n  }\r\n\r\n  handleSelectRow = (e, id) => {\r\n    this.setState({ selectedId: +id });\r\n    Svc.setSelected(id);\r\n  }\r\n\r\n  handleRemoveRow = (e, id) => {\r\n      Svc.removeHistoryRow(id);\r\n  }\r\n    \r\n \r\n  render = () => {\r\n    console.log('Calc::render()');\r\n    const rowColor = (idx) => (+idx === +this.state.selectedId) ? \"navy\" : \"black\";\r\n    const rowBkColor = (idx) => (+idx === +this.state.selectedId) ? \"lightgray\" : \"white\";\r\n \r\n   \r\n    return (\r\n      <div  className=\"tableFrame\">\r\n        <h5 id=\"tabelLabel\" >Calculation's History</h5>\r\n        <table className='table' aria-labelledby=\"tabelLabel\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>HISTORY</th>\r\n                <th>Delete</th>\r\n                <th>Select</th>\r\n       \r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.history.map(dto =>\r\n                <tr key={dto.id} style={{ color: rowColor(dto.id) , background : rowBkColor(dto.id)}}>\r\n                  <td>{dto.id}</td>\r\n                  <td>\r\n                    {`${dto.argX} ${dto.operation} ${dto.argY} = ${dto.result}`}\r\n                  </td>\r\n                  <td >\r\n                    <Button variant=\"alarm\" className=\"btnSubm\" type=\"button\"\r\n                      onClick={(e) => this.handleRemoveRow(e, dto.id )} >\r\n                      <FontAwesomeIcon icon={faTimesCircle} size=\"1x\" color=\"red\"/>\r\n                    </Button>\r\n                    \r\n                 \r\n                  </td>\r\n                  <td>\r\n                    <Button variant=\"light\" className=\"btnSubm\" type=\"button\"\r\n                        onClick={(e) => this.handleSelectRow(e, dto.id)} >\r\n                      <FontAwesomeIcon icon={faArrowAltCircleRight} size=\"1x\" color=\"green\"/>\r\n                    </Button>\r\n                    \r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n   \r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n//import { render } from \"react-dom\";\r\nimport { Form, Button ,Tooltip} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport { faEquals } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { CalculatorService as Svc } from '../services/CalculatorService';\r\nimport './Calculator.css';\r\nimport { CalculatorTable } from './CalculatorTable';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n//const MapHistory = new Map();\r\nexport class Calculator extends Component {\r\n  static displayName = Calculator.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n   //   this.subscr1 = undefined;\r\n    this.state = {\r\n      argX: 0,\r\n      argY: 0,\r\n      operation: '+',\r\n      operations: [], // string[], \r\n      result: '',\r\n      error: '',\r\n      selectedId: -1\r\n    };\r\n    this.subscriptions = [];\r\n    this.EvCalcResult = Svc.EvCalcResult();\r\n    this.EvSelect = Svc.EvSelect();\r\n \r\n    console.log('Calculator::constructor');\r\n  }\r\n\r\n  async componentDidMount() {\r\n \r\n    const sub1 = this.EvCalcResult.subscribe(dto => this.onEvCalcResult(dto));\r\n    const sub2 = this.EvSelect.subscribe(id => this.onEvSelect(id));\r\n\r\n    this.subscriptions = [sub1, sub2];\r\n    \r\n     this.setState({\r\n      operations: [...await Svc.getOperations$()]\r\n    });\r\n\r\n  \r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.subscriptions.map(sub => sub.unsubscribe());\r\n    //this.subscr1?.unsubscribe();\r\n  }\r\n\r\n  onEvCalcResult = (dto) =>{\r\n    if (dto &&  !dto.error) {\r\n      this.setState({\r\n        result: dto.result,\r\n        selectedId: -1\r\n      });\r\n      \r\n      console.log('Result=' +  this.state.result);\r\n  \r\n    } else {\r\n      this.setState({\r\n        result: 'N/A',\r\n        error: dto.error,\r\n        selectedId: -1\r\n      });\r\n  \r\n    }\r\n\r\n  }\r\n  \r\n  onEvSelect = (id) => {\r\n    const dto = Svc.getSelectedDto(+id);\r\n    if (dto) {\r\n      this.setState({\r\n        \r\n        selectedId : dto.id,\r\n        argX: dto.argX,\r\n        argY: dto.argY,\r\n        operation: dto.operation,\r\n        result: dto.result,\r\n        error: ''\r\n    });\r\n    } else {\r\n      if (this.state.selectedId !== -1)\r\n      {\r\n        this.setState({selectedId : -1});\r\n      }\r\n    }\r\n  }\r\n\r\n   \r\n \r\n  handleCalc = (e) => {\r\n    debugger;\r\n    e.preventDefault();\r\n    console.dir(e);\r\n    const { argX, argY, operation, selectedId } = this.state;\r\n    Svc.toCalculate(+argX, +argY, operation, selectedId);\r\n    if (selectedId !== -1)\r\n    {\r\n      this.setState({selectedId : -1});\r\n    }\r\n    \r\n  }\r\n   \r\n\r\n  \r\n createSelectItems = () => {\r\n    let items = [];\r\n    let opers = this.state.operations || [];\r\n    for (let i = 0; i <= this.state.operations.length; i++) {\r\n      let op = opers[i];\r\n      items.push(<option key={i} value={op}>{op}</option>)\r\n    }\r\n    return items;\r\n  }\r\n\r\n\r\n  render = () => {\r\n    console.log('Calculator::render()');\r\n    //let { error, argX, argY, operation } = this.state;\r\n    // const _tableContents = this.state.loading\r\n\r\n     const _errorBanner = this.state.error\r\n      ? <h5><Form.Label style={{ color: 'red' }}>{this.state.error}</Form.Label></h5>\r\n      : <br />;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Form inline onSubmit={this.handleCalc } >\r\n\r\n            <Form.Group controlId=\"inpArgX\" mb={1}>\r\n                  <OverlayTrigger\r\n                    delay={{ hide: 450, show: 300 }}\r\n                    overlay={(props) => (\r\n                      <Tooltip {...props}>\r\n                      User type \r\n                      </Tooltip>\r\n                    )} placement=\"top\">\r\n                    <Form.Control className=\"args \" type=\"number\" value={ this.state.argX}\r\n                        onChange={(e) => this.setState({ argX: e.target.value })} />\r\n                  </OverlayTrigger>\r\n\r\n                </Form.Group >\r\n              &nbsp;&nbsp;\r\n              <Form.Group controlId=\"selectOperation\">\r\n\r\n                  <OverlayTrigger\r\n                    delay={{ hide: 450, show: 300 }}\r\n                    overlay={(props) => (\r\n                      <Tooltip {...props}>\r\n                      User select from dropdown\r\n                      </Tooltip>\r\n                    )} placement=\"bottom\">\r\n                    <Form.Control as=\"select\" className=\"sel\" value={ this.state.operation}\r\n                        onChange={(e) => this.setState({ operation: e.target.value })}>\r\n                          {this.createSelectItems()}           \r\n                        </Form.Control>\r\n                  </OverlayTrigger>\r\n            \r\n              </Form.Group>\r\n              &nbsp;&nbsp;\r\n              <Form.Group controlId=\"inpArgY\">\r\n                <OverlayTrigger\r\n                      delay={{ hide: 450, show: 300 }}\r\n                      overlay={(props) => (\r\n                        <Tooltip {...props}>\r\n                        User type \r\n                        </Tooltip>\r\n                      )} placement=\"top\">\r\n                  <Form.Control className=\"args\" type=\"number\" value={ this.state.argY}\r\n                      onChange={(e) => this.setState({ argY: e.target.value })} />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              &nbsp;&nbsp;\r\n              <Form.Group controlId=\"btnResult\">\r\n                <OverlayTrigger\r\n                      delay={{ hide: 450, show: 300 }}\r\n                      overlay={(props) => (\r\n                        <Tooltip {...props}>\r\n                        User clicks \r\n                        </Tooltip>\r\n                      )} placement=\"top\">\r\n                    <Button variant=\"primary\" className=\"btnSubm\"\r\n                      type=\"submit\" >\r\n                      <FontAwesomeIcon icon={faEquals} size=\"lg\" /> \r\n                  </Button>\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              &nbsp;&nbsp;\r\n              <Form.Group controlId=\"labResult\">\r\n                <OverlayTrigger\r\n                      delay={{ hide: 450, show: 300 }}\r\n                      overlay={(props) => (\r\n                        <Tooltip {...props}>\r\n                        Calculated from server \r\n                        </Tooltip>\r\n                      )} placement=\"top\">\r\n                    \r\n                    <Form.Control className=\"args\" type=\"text\" value={ this.state.result}\r\n                        readOnly />\r\n                  </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form>\r\n          <div>      \r\n            {_errorBanner}\r\n          </div>\r\n             \r\n \r\n        {/* <Form.Label>X:{this.state.argX}|OP{this.state.operation}|Y:{this.state.argY}={this.state.result}</Form.Label> */}\r\n        </div>\r\n\r\n        <CalculatorTable></CalculatorTable>\r\n \r\n\r\n      </div >\r\n    \r\n    );\r\n  }\r\n\r\n\r\n  \r\n  // renderOperationTable = () => {\r\n  //   let  selectedId  = this.state.selectedId;\r\n  //   //let { selectedId, argX, argY, operation } = this.state;\r\n  //   const rowColor = (idx) => (idx === selectedId) ? \"cyan\" : \"red\";\r\n \r\n  //  // const _selectedId = this.state.selectedId;\r\n  //   return (\r\n  //     <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n  //       <thead>\r\n  //         <tr>\r\n  //           <th>ID</th>\r\n  //           <th>HISTORY</th>\r\n  //           <th>Select</th>\r\n  //           <th>Delete</th>\r\n \r\n  //         </tr>\r\n  //       </thead>\r\n  //       <tbody>\r\n  //         {this.state.history.map(dto =>\r\n  //           <tr key={dto.id} style={{ color : rowColor(dto.id)}}>\r\n  //             <td>{dto.id}</td>\r\n  //             <td>\r\n  //               {`${dto.argX} ${dto.operation} ${dto.argY} = ${dto.result}`}\r\n  //             </td>\r\n  //             <td >\r\n  //               <Button variant=\"light\" className=\"btnSubm\" type=\"button\" onClick={this.onRemoveRow(dto.id)} >\r\n  //                <FontAwesomeIcon icon={faTimesCircle} />\r\n  //               </Button>\r\n                 \r\n  //             </td>\r\n  //             <td onClick={this.onEditRow(dto.id)}>\r\n  //               <Button variant=\"light\" className=\"btnSubm\" type=\"button\" onClick={this.onEditRow(dto.id)} >\r\n  //                 <FontAwesomeIcon icon={faArrowAltCircleRight} />\r\n  //               </Button>\r\n  //             </td>\r\n  //           </tr>\r\n  //         )}\r\n  //       </tbody>\r\n  //     </table>\r\n  //   );\r\n  // }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n//import { render } from \"react-dom\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle  } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faArrowAltCircleRight } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\n\r\n//const MapHistory = new Map();\r\nexport class About extends Component {\r\n  static displayName = About.name;\r\n\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  componentWillUnmount = () => {\r\n     //To unsubscribe Events from server\r\n    \r\n  }\r\n \r\n\r\n \r\n  render = () => {\r\n     \r\n    return (\r\n      <div  className=\"tableFrame\">\r\n        <div>\r\n        <h2>\r\n          <p>Welcome to Andrey Dergachev first React/NetCore 5 SPA @2021</p>\r\n        </h2>\r\n  \r\n\r\n          <p>\r\n             This project is the React based WEB site In subdirectory\r\n            <code>..\\..\\Doc</code> contained technical developement task\r\n           There is only one functional to calculate in the sever the simplest arythmetical expression.\r\n          </p>\r\n \r\n       \r\n\r\n          <ul>  Files React:\r\n            <li>\r\n             <code>App.js</code> standard application starer for react\r\n            </li>\r\n            <li>\r\n              <code>Layout.jsx</code> and <code>NavMenu.jsx</code> also is standard Menu and Layout functionalities\r\n            </li>\r\n          </ul>\r\n \r\n          <ul> Files for Calculator:\r\n            <li>\r\n              <code>Calculator.jsx</code> is page of react, having dialogto enter Arguments and operations.\r\n            </li>\r\n            <li>\r\n               <code>CalculatorTable.jsx</code> - table viewer for calculation history .\r\n                This component is a child of Calculator page\r\n            </li>\r\n          </ul>\r\n\r\n          <ul>\r\n            <li>\r\n              <code>CalculatorsService.js</code> is a singleton with events and syncronic API .\r\n              Contains the <code>NgRx</code> subjets to oerform synchrony requests in async manner\r\n            </li>\r\n            <li>\r\n              <code>JsonHttpServer.jsx</code> - service to perform Http calls.\r\n            </li>\r\n          </ul>\r\n        </div>\r\n \r\n        <footer >\r\n          <div>\r\n            <h4> Agenda for Calculator Page</h4>\r\n            <p>\r\n              <FontAwesomeIcon icon={faTimesCircle} size=\"2x\" color=\"red\" /> \r\n              DELETE when user presses this button - the calculation will be deleted (both in server and client);\r\n            </p>\r\n            <p>\r\n              <FontAwesomeIcon icon={faArrowAltCircleRight} size=\"2x\" color=\"green\"/>\r\n              UPDATE when user presses this button - the calculation will be\r\n              show in the above inputs and when the user change the value ,\r\n              it will be updated also in the calculation history.\r\n            </p>\r\n          </div>\r\n         \r\n        </footer>\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\n//import { Home } from './components/Home';\r\nimport { Calculator } from './components/Calculator';\r\n\r\nimport { About } from './components/About';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={About} />\r\n        <Route path='/calc' component={Calculator} />\r\n        <Route path=\"/swagger\" render={() => (window.location = \"http://localhost:5000/swagger\")} />\r\n\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}